swagger: '2.0'
info:
  version: 1.0.0
  title: Crud de fazendas e lotes ENG
  description: backend simples que implementa o crud como micro serviço
servers: 
  - url: http://localhost:3000/fazendas
    description:     CRUD de fazendas
  - url: https://localhost:3000/lotes
    description:     CRUD de lotes
tags: 
  - name: Fazendas
paths:
  /lotes:
    get:
      tags: 
        - Lotes
      summary: Lista todos os lotes
      description: Retorna uma lista com todos os lotes cadastrados
      operationId: "readAll"
      parameters: 
        - $ref: '#/components/parameters/nome'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/max'
      responses:
        200:
          description: A lista de lotes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lote'
        400:
          $ref: 'Erro referente á validação do documento'
    post:
      tags: 
        - lote
      summary: Insere uma fazenda no Banco de Dados
      description: Realiza a inserção de um documento na collection de lotes
      operationId: create
      requestBody:
        description: O Lote
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lote'
      responses:
        200:
          description: Lote criado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lote'
        400:
          description: Erro referente à validação do documento
        500:
          $ref: '#/components/responses/erro500'
  /fazendas:
    parameters: 
      - $ref: '#/components/parameters/nome'
    get:
      tags: 
        - Fazendas
      summary: Lista uma Fazenda
      description: 'Retorna uma fazenda que tenha o nome informado no corpo da requisição'
      operationId: readByName
      responses:
        200:
          description: A fazenda
        400: 
          description: Nome não pode estar em branco ou nada foi encontrado
        500:
          $ref: '#/components/responses/erro500'
    put:
      tags: 
        - Fazenda
      summary: Atualiza uma Fazenda
      description: 'atualiza a fazenda de pelo id, com os parametros, todos informados no corpo da requisição'
      operationId: update
      requestBody:
        description: 'os parâmetros e o id para serem atualizados'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fazenda'
      responses:
        200:
          description: Fazenda atualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fazenda'
        404:
          description: erro referente à validação do documento
        500:
          $ref: '#/components/responses/erro500'
    delete:
      tags: 
        - Fazenda
      summary: soft delete de uma fazenda
      description: adiciona delete=true à fazenda de id informado no corpo da requisição
      operationId: softDelete
      responses:
        200:
          description: Fazenda deletada com sucesso.
        400:
          description: id não pode estar em branco
        500:
          $ref: '#/components/responses/erro500'
components:
  responses:
    erro500:
      description: :(.
  schemas:
    Lote: 
      required:
        - _nome
        - _endereco
      properties:
        id: 
          type: ObjectId
    Fazenda:
      required: 
        - _nome
      properties:
        id:
         type: ObjectId
        _nome:
          type: String
        _endereco:
          type: String
    Fazendas:
      type: array
      items:
        $ref: '#/components/schemas/Fazenda'
  parameters:
    nome:
      name: nome
      in: path
      description: o nome do lote ou fazenda
      required: true
      schema:
        type: String
    page:
      name: page
      in: query
      description: Numero da pagina
      schema:
        type: integer
    max:
      name: max
      in: query
      description: maximo de fazendas ou lotes por pagina
      schema:
        type: integer
